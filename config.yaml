# ============================================================================
# RDT-VoI Configuration - OPTIMIZED V2 (Based on Log Analysis)
# Road Deterioration Testing: Value of Information Framework
#
# 🔥 核心优化（基于 43分钟运行日志分析）:
#   1. 阈值改为先验高分位数（τ = quantile(μ, 0.88)）
#   2. 加大误判代价比（FN:FP = 20:1，从 15:1 提升）
#   3. EVI 预筛放宽到 0.7（从 0.25）
#   4. 增加稀疏池场景
#   5. 启用货币预算（可选）
# ============================================================================

experiment:
  name: "rdt_voi_v2_optimized"
  seed: 42
  output_dir: "results/v2_optimized"

# ----------------------------------------------------------------------------
# Numerical Settings
# ----------------------------------------------------------------------------
numerics:
  linear_solver_tol: 1.0e-8
  cholesky_nugget: 1.0e-6
  pcg_max_iter: 500
  logdet_method: "cholmod"

# ----------------------------------------------------------------------------
# Spatial Domain
# ----------------------------------------------------------------------------
geometry:
  mode: "grid2d"
  nx: 30
  ny: 30
  h: 5.0

# ----------------------------------------------------------------------------
# Prior Distribution (GMRF/SPDE) - ✓ CV=30% (已验证优秀)
# ----------------------------------------------------------------------------
prior:
  nu: 1.0
  kappa: 0.10
  sigma2: 0.30
  alpha: 2
  beta: 1.0e-6
  mu_prior_mean: 2.2
  mu_prior_std: 0.3

  # 🔥 新增（如果没有的话）
  beta_base: 2.0      # 从 5e-2 增大到 2.0（40倍）⚡
  beta_hot: 1.0e-3    # 从 1e-4 增大到 1e-3（10倍）


  hotspots:
    - center_m: [50, 50]
      radius_m: 40      # 从 40 减到 25

    - center_m: [150, 50]
      radius_m: 30      # 从 30 减到 20

    - center_m: [100, 100]
      radius_m: 30      # 从 45 减到 30

# ----------------------------------------------------------------------------
# Sensor Pool Configuration - OPTIMIZED V2
# ----------------------------------------------------------------------------
sensors:

  types:
    # 极便宜但噪声极大
    - name: smartphone
      noise_std: 0.50
      cost_gbp: 30
      footprint: point

    # 中等精度+中等成本
    - name: "basic_point"
      noise_std: 0.15
      cost_gbp: 150
      footprint: "point"

    # 极高精度+极高成本
    - name: "laser_profiler"
      noise_std: 0.05
      cost_gbp: 800
      footprint: "point"

    # 大足迹+中高噪声
    - name: photogrammetry
      noise_std: 0.25
      cost_gbp: 100
      footprint: avg3x3

    # 极大足迹+高噪声
    - name: "vehicle_avg"
      noise_std: 0.35
      cost_gbp: 100
      footprint: "avg5x5"

    - name: inertial_profiler
      noise_std: 0.15
      cost_gbp: 300
      footprint: avg3x3

  pool_strategy: "grid_subsample"

  # 🔥 关键改动：稀疏池（从 0.3 降到 0.15）
  pool_fraction: 0.5  # ✅ 让"选错"的代价更大

  type_mix: [0.3, 0.4, 0.3]

  # 🔥 新增：异质化配置
  use_heterogeneous: true
  cost_zones:  # 🔥 新增成本分区
    - center_m: [100, 100]
      radius_m: 50
      cost_multiplier: 1.5
      noise_multiplier: 0.8
      allowed_types: ['inertial_profiler', 'photogrammetry']

# ----------------------------------------------------------------------------
# Decision Model - 🔥 优化 V2（拉大任务难度）
# ----------------------------------------------------------------------------
decision:
  # 🔥 关键改动 1：使用分位数阈值（而非固定值）
  tau_iri: null         # 如果用动态阈值，设为 null
  tau_quantile: 0.75    # 或者保留您原有的固定值

  # 🔥 关键改动 2：加大误判代价比
  L_FP_gbp: 500.0      # 保持或修改
  L_FN_gbp: 10000.0    # 🔥 增大到 FP 的 10-20 倍
  L_TP_gbp: 800.0
  L_TN_gbp: 0.0
  # 🔥 新增：DDI 控制
  target_ddi: 0.30  # 目标：30% 像元在阈值附近

  # 🔥 新增：行动约束
  K_action: 20  # 最多维护 20 个位置


  # 🎯 成本比例: FN:FP = 120k:6k = 20:1 ✓

# ----------------------------------------------------------------------------
# Sensor Selection Methods
# ----------------------------------------------------------------------------
selection:
  methods:
    - greedy_mi
    - greedy_aopt
    - greedy_evi
    - maxmin
    - uniform
    - random

  # 🔥 可选：改为货币预算（当前仍用台数）
  budget_type: "count"     # "count" 或 "monetary"

  # 台数预算（稀缺段加密）
  budgets: [3, 8, 15, 20, 30, 40]

  # 货币预算（可选，当 budget_type="monetary" 时启用）
  # budgets_gbp: [500, 1000, 2000, 3000, 5000, 8000, 12000, 20000]

  # Method-specific configurations
  greedy_mi:
    batch_size: 1
    adaptive_pruning: true
    prune_threshold: 0.1
    use_cost: true          # ✅ 确保启用

  greedy_aopt:
    n_probes: 32            # ✅ 从 16 提升到 32（更稳定）
    use_cost: true

  # 🔥 EVI Configuration - CRITICAL OPTIMIZATION
  greedy_evi:
    n_y_samples: 0         # 🔥 改为 0（解析法更快）
    use_cost: true
    mi_prescreen: true     # 🔥 确保启用
    keep_fraction: 0.5     # 🔥 从 0.25 放宽到 0.5


    # 运行策略
    # 🔥 新增子集运行配置
    budgets_subset: []
    must_budgets: [10, 30]
    every_n_folds: 2
    max_folds: null

  maxmin:
    use_cost: true

# ----------------------------------------------------------------------------
# Expected Value of Information
# ----------------------------------------------------------------------------
evi:
  compute_for: ["greedy_mi", "greedy_aopt", "greedy_evi"]
  method: "monte_carlo"
  monte_carlo_samples: 20

# ----------------------------------------------------------------------------
# Cross-Validation
# ----------------------------------------------------------------------------
cv:
  scheme: "spatial_block"
  k_folds: 3
  buffer_width_multiplier: 1.5
  block_strategy: "kmeans"
  ensure_connected: true
  morans_permutations: 999

# ----------------------------------------------------------------------------
# Uncertainty Quantification
# ----------------------------------------------------------------------------
uq:
  bootstrap_method: "spatial_block"
  bootstrap_samples: 1000
  confidence_level: 0.95
  coverage_percentile: 90
  compute_crps: true

# ----------------------------------------------------------------------------
# Diagnostics
# ----------------------------------------------------------------------------
diagnostics:
  morans_i:
    compute: true
    permutations: 999
    alpha: 0.05

  calibration:
    pit_histogram: true
    coverage_curves: true
    reliability_diagram: true

# ----------------------------------------------------------------------------
# 🔥 Visualization - 新增业务友好图表
# ----------------------------------------------------------------------------
plots:
  save_formats: [png, pdf]
  dpi: 300
  style: "seaborn-v0_8-paper"

  budget_curves:
    metrics: ["rmse", "expected_loss_gbp", "coverage_90"]
    show_confidence: true
    confidence_level: 0.95

  performance_profile:
    tau_values: [1.0, 1.05, 1.1, 1.2, 1.5, 2.0, 3.0]
    use_budget_fold_instances: true

  critical_difference:
    alpha: 0.05
    test: "nemenyi"

  # 🔥 新增：业务友好图表配置
  business_metrics:
    enable: true
    baseline_method: "uniform"
    show_savings: true
    show_roi: true
    show_cost_efficiency: true

  # 🔥 新增：效应量分析
  effect_size:
    enable: true
    plot_heatmaps: true
    plot_pairwise_table: true
    top_k_comparisons: 20

  # 🔥 新增：近阈值区域分析
  critical_region:
    enable: true
    epsilon: 0.2            # 临界区域半径（τ ± 0.2）
    plot_heatmap: true

  expert_plots:
    enable_all: true

    marginal_efficiency:
      enable: true
      normalize_by_cost: true
      unit: "gbp_per_test_point"  # ✅ 新增单位

    type_composition:
      enable: true
      show_cost_breakdown: true

    mi_voi_correlation:
      enable: true
      methods: ["greedy_mi", "greedy_evi"]

    calibration_plots:
      enable: true

    spatial_diagnostics:
      enable: true
      show_morans_i: true

    sensor_placement_map:
      enable: true
      budgets_to_show: [5, 10, 20, 30, 50]

    # 🔥 新增图表
    roi_curves:
      enable: true

    robustness_heatmap:
      enable: true
      ddi_range: [ 0.1, 0.2, 0.3, 0.4 ]
      loss_ratios: [ 1, 5, 10, 20 ]

    ddi_overlay:
      enable: true
# ----------------------------------------------------------------------------
# Acceptance Criteria
# ----------------------------------------------------------------------------
acceptance:
  m1_grid_size: 100
  m1_budgets: [5, 10, 20]
  m1_check_monotonic: true
  m1_check_diminishing: true

  m2_min_improvement_vs_random: 0.15
  m2_confidence_level: 0.95

  m3_small_instance_n: 25
  m3_small_instance_k: 5
  m3_max_suboptimality: 0.10

  m4_morans_alpha: 0.05
  m4_coverage_tolerance: 0.10
  m4_msse_tolerance: 0.25

# ============================================================================
# 🔥 实验场景配置（可选：多场景对比）
# ============================================================================
scenarios:
  # 场景 1：稀疏池 + 高代价
  - name: "sparse_high_stakes"
    active: true
    pool_fraction: 0.15
    tau_quantile: 0.90
    L_FN_gbp: 150000
    L_FP_gbp: 5000

  # 场景 2：密集池 + 中代价
  - name: "dense_medium_stakes"
    active: false
    pool_fraction: 0.30
    tau_quantile: 0.85
    L_FN_gbp: 100000
    L_FP_gbp: 8000

  # 场景 3：极稀疏 + 极高代价
  - name: "ultra_sparse_ultra_stakes"
    active: false
    pool_fraction: 0.10
    tau_quantile: 0.92
    L_FN_gbp: 200000
    L_FP_gbp: 4000

# ============================================================================
# 修改说明
# ============================================================================
# 相比原 config，主要修改：
#
# 1. 决策模型（2处）:
#    - tau_quantile: 0.88（动态阈值）
#    - FN:FP 比例提升到 20:1
#
# 2. 传感器池（1处）:
#    - pool_fraction: 0.15（更稀疏）
#
# 3. EVI 参数（2处）:
#    - keep_fraction: 0.7（从 0.25）
#    - n_y_samples: 8（启用 MC）
#
# 4. A-opt 参数（1处）:
#    - n_probes: 32（更稳定）
#
# 5. 新增可视化（3组）:
#    - business_metrics（省钱 + ROI）
#    - effect_size（Cliff's Delta）
#    - critical_region（近阈值分析）
#
# 预期效果：
#   - EVI vs MI 差距拉大到 5-10%
#   - EVI 运行时间降至 1-2 分钟（从 43 分钟）
#   - 性能曲线明显分离
#   - CD 图显著性提升
# ============================================================================