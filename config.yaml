# ============================================================================
# RDT-VoI Simulation Configuration
# Road Deterioration Testing: Value of Information Framework
# ============================================================================

experiment:
  name: "rdt_voi_baseline"
  seed: 42
  output_dir: "results/baseline_run"

# ----------------------------------------------------------------------------
# Numerical Settings
# ----------------------------------------------------------------------------
numerics:
  linear_solver_tol: 1.0e-8
  cholesky_nugget: 1.0e-6
  pcg_max_iter: 500
  logdet_method: "cholmod"  # "cholmod" | "exact" | "hutchinson"

# ----------------------------------------------------------------------------
# Spatial Domain
# ----------------------------------------------------------------------------
geometry:
  mode: "grid2d"  # "grid2d" | "polyline1d" | "graph"
  nx: 40
  ny: 40
  h: 5.0  # Grid spacing in meters
  # For graph mode (optional):
  # adjacency_file: "data/road_graph.npz"

# ----------------------------------------------------------------------------
# Prior Distribution (GMRF/SPDE)
# ----------------------------------------------------------------------------
prior:
  # 原有参数保持不变
  nu: 1.0
  kappa: 0.10
  sigma2: 0.30
  alpha: 2
  beta: 1.0e-6  # 保留向后兼容
  mu_prior_mean: 2.2
  mu_prior_std: 0.3

  # 🔥 新增：非平稳先验参数
  beta_base: 3   # 非热点区域 nugget（比 beta 大1000倍）
  beta_hot: 1.0e-8    # 热点区域 nugget（等于原 beta）

  # 🔥 新增：热点区域定义（米坐标）
  # 假设你的域是 200m × 200m (40×40 网格, h=5m)
  hotspots:
    - center_m: [50, 50]     # 左下角
      radius_m: 45           # 增大半径
    - center_m: [150, 50]    # 右下角
      radius_m: 45
    - center_m: [50, 150]    # 左上角
      radius_m: 45
    - center_m: [150, 150]   # 右上角
      radius_m: 45
    - center_m: [100, 100]   # 中心
      radius_m: 50
# ----------------------------------------------------------------------------
# Sensor Pool Configuration
# ----------------------------------------------------------------------------
sensors:
  # Available sensor types
  types:
    - name: "basic_point"
      noise_std: 0.15
      cost_gbp: 100
      footprint: "point"

    - name: "precise_point"
      noise_std: 0.08
      cost_gbp: 250
      footprint: "point"

    - name: "area_avg_3x3"
      noise_std: 0.12
      cost_gbp: 180
      footprint: "avg3x3"

    - name: "area_avg_5x5"
      noise_std: 0.18
      cost_gbp: 120
      footprint: "avg5x5"

  # Pool generation strategy
  pool_strategy: "grid_subsample"  # "grid_subsample" | "random" | "importance"
  pool_fraction: 0.3               # Fraction of domain to use as candidates

  # Type mix (must sum to 1.0)
  type_mix: [0.4, 0.2, 0.3, 0.1]  # Proportion of each sensor type

# ----------------------------------------------------------------------------
# Decision Model (Economics)
# ----------------------------------------------------------------------------
decision:
  # Decision threshold
  tau_iri: 2.2  # 🔥 调整到均值附近 (从2.0改为2.2，接近mu_prior_mean)
                # 这样约50%的位置会在阈值上下，决策更敏感

  # Loss matrix (in GBP) - 🔥 关键改进：大幅增加不对称性
  L_TP_gbp: 5000     # True Positive: 正确维护需要维护的路段 (保持)
  L_FP_gbp: 8000     # False Positive: 过度维护 (保持)
  L_FN_gbp: 80000    # 🔥 False Negative: 漏检严重路段 (从40k增加到80k - 2倍)
                     # 这是最重要的成本！错过坏路段后果严重
  L_TN_gbp: 0        # True Negative: 正确跳过 (可以保持0)

  # 成本比分析：
  # FN:FP = 80000:8000 = 10:1  (原来是 40000:8000 = 5:1)
  # FN:TP = 80000:5000 = 16:1  (原来是 40000:5000 = 8:1)
  # → 这将使不确定性降低的价值大幅提升


# ----------------------------------------------------------------------------
# Sensor Selection Methods
# ----------------------------------------------------------------------------
selection:
  # 🔥 Updated method list (including new methods)
  methods:
    - greedy_mi
    - greedy_aopt
    - greedy_evi
    - maxmin
    - uniform
    - random

  # Budget levels to evaluate (number of sensors)
  budgets: [5, 10, 15, 20, 30, 40, 50]

  # Method-specific configurations
  greedy_mi:
    batch_size: 1
    adaptive_pruning: true
    prune_threshold: 0.1
    max_candidates: null  # null = no limit
    early_stop_ratio: null

  greedy_aopt:
    n_probes: 16         # 🔥 Hutchinson++ probes for trace estimation
    use_cost: true       # 🔥 Enable gain/cost scoring

  greedy_evi:
    n_y_samples: 10
    use_cost: true

    # 🔥 新增：必须运行的预算（所有折都运行）
    must_budgets: [5, 20, 40]  # 关键预算点

    # 🔥 新增：每 N 折运行一次（节省计算）
    every_n_folds: 3  # 每 2 折运行一次（对非 must_budgets）

    # 原有配置（可选）
    budgets_subset: []  # 空列表表示运行所有预算
    max_folds: null     # null 表示运行所有折

  maxmin:
    use_cost: true       # 🔥 Normalize distance by cost

# ----------------------------------------------------------------------------
# Expected Value of Information (EVI) Computation
# ----------------------------------------------------------------------------
evi:
  compute_for: ["greedy_mi", "greedy_evi"]  # 🔥 添加 greedy_evi
  method: "monte_carlo"
  monte_carlo_samples: 10  # 🔥 先用小值测试 (从500改为10)greedy_evi

  # Unscented Transform settings (if method = "unscented")
  unscented_alpha: 1.0
  unscented_beta: 2.0
  unscented_kappa: 0.0

# ----------------------------------------------------------------------------
# Cross-Validation
# ----------------------------------------------------------------------------
cv:
  scheme: "spatial_block"  # "spatial_block" | "random" | "stratified"
  k_folds: 3
  buffer_width_multiplier: 1.5  # Buffer = 1.5 × correlation_length
  block_strategy: "kmeans"      # "kmeans" | "grid" | "random"
  ensure_connected: true
  morans_permutations: 999      # For spatial autocorrelation test

# ----------------------------------------------------------------------------
# Uncertainty Quantification
# ----------------------------------------------------------------------------
uq:
  bootstrap_method: "spatial_block"  # "spatial_block" | "residual"
  bootstrap_samples: 1000
  confidence_level: 0.95
  coverage_percentile: 90
  compute_crps: true

# ----------------------------------------------------------------------------
# Diagnostics
# ----------------------------------------------------------------------------
diagnostics:
  morans_i:
    compute: true
    permutations: 999
    alpha: 0.05

  calibration:
    pit_histogram: true
    coverage_curves: true
    reliability_diagram: true

# ----------------------------------------------------------------------------
# Visualization
# ----------------------------------------------------------------------------
plots:
  save_formats: [png, pdf]
  dpi: 300
  style: "seaborn-v0_8-paper"

  # Budget-performance curves
  budget_curves:
    metrics: ["rmse", "expected_loss_gbp", "coverage_90"]
    show_confidence: true
    confidence_level: 0.95

  # Performance profile
  performance_profile:
    tau_values: [1.0, 1.05, 1.1, 1.2, 1.5, 2.0, 3.0]
    use_budget_fold_instances: true  # 🔥 Use (budget, fold) pairs as instances

  # Critical difference diagram
  critical_difference:
    alpha: 0.05
    test: "nemenyi"  # "nemenyi" | "wilcoxon"

  # Expert plots (optional, for detailed analysis)
  expert_plots:
    enable_all: false

    marginal_efficiency:
      enable: true
      normalize_by_cost: true

    type_composition:
      enable: true
      show_cost_breakdown: true

    mi_voi_correlation:
      enable: true  # 🔥 MI vs EVI scatter plot
      methods: ["greedy_mi", "greedy_evi"]

    calibration_plots:
      enable: true

    spatial_diagnostics:
      enable: true
      show_morans_i: true

    ablation_study:
      enable: false

    sensor_placement_map:
      enable: true
      budgets_to_show: [10, 30, 50]

# ----------------------------------------------------------------------------
# Acceptance Criteria (for automated validation)
# ----------------------------------------------------------------------------
acceptance:
  # Milestone 1: Basic functionality
  m1_grid_size: 100
  m1_budgets: [5, 10, 20]
  m1_check_monotonic: true
  m1_check_diminishing: true

  # Milestone 2: Performance vs baselines
  m2_min_improvement_vs_random: 0.15  # 15% better than random
  m2_confidence_level: 0.95

  # Milestone 3: Optimality gap
  m3_small_instance_n: 25
  m3_small_instance_k: 5
  m3_max_suboptimality: 0.10  # Within 10% of optimal

  # Milestone 4: Statistical validity
  m4_morans_alpha: 0.05
  m4_coverage_tolerance: 0.10  # ±10% from nominal
  m4_msse_tolerance: 0.25      # MSSE within [0.75, 1.25]